// Generated by Dagger (https://dagger.dev).
package com.example.itaudesafio.data.repository;

import com.example.itaudesafio.data.remote.RemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class WeatherRepositoryImpl_Factory implements Factory<WeatherRepositoryImpl> {
  private final Provider<RemoteDataSource> remoteDataSourceProvider;

  public WeatherRepositoryImpl_Factory(Provider<RemoteDataSource> remoteDataSourceProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
  }

  @Override
  public WeatherRepositoryImpl get() {
    return newInstance(remoteDataSourceProvider.get());
  }

  public static WeatherRepositoryImpl_Factory create(
      Provider<RemoteDataSource> remoteDataSourceProvider) {
    return new WeatherRepositoryImpl_Factory(remoteDataSourceProvider);
  }

  public static WeatherRepositoryImpl newInstance(RemoteDataSource remoteDataSource) {
    return new WeatherRepositoryImpl(remoteDataSource);
  }
}
